name: mswin
on:
  push:
    branches:
      - '*'
  schedule:
    - cron: '35 1,8,15 * * *'
  workflow_dispatch:
    inputs:
      ruby_ref:
        description: 'branch or tag to checkout in the ruby repo'
        default: 'master'
      ruby_repo:
        description: 'github repo owner/repo where to pull ruby from'
        default: 'ruby/ruby'
      release_tag:
        description: 'tag of the release to upload to'
        default: 'ruby-master'

jobs:
  mswin:
    strategy:
      matrix:
        os: [2025]
      fail-fast: false
    runs-on: windows-${{ matrix.os }}
    env:
      PRE: ruby-mswin
      ruby_ref: master
      release_tag: ruby-master
      ruby_repo: 'ruby/ruby'

    steps:
      - name: git config
        run: |
          git config --system core.autocrlf false
          git config --system core.eol lf

      - name: repo checkout
        uses: actions/checkout@v4

      - name: load ruby
        timeout-minutes: 12
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: mswin

      - name: Handle workflow dispatch inputs
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "ruby_ref=${{ github.event.inputs.ruby_ref}}" >> $env:GITHUB_ENV
          echo "release_tag=${{ github.event.inputs.release_tag}}" >> $env:GITHUB_ENV
          echo "ruby_repo=${{ github.event.inputs.ruby_repo}}" >> $env:GITHUB_ENV

      # cert file is created with RubyInstaller2
      - name: Get Ruby and RubyInstaller2 repos
        timeout-minutes: 5
        run: |
          $gh = 'https://github.com'
          git clone -q --depth=1 --no-tags --branch=master  $gh/oneclick/rubyinstaller2.git ./rubyinstaller2
          git clone -q --depth=1 --no-tags --branch=${{ env.ruby_ref }}  $gh/${{ env.ruby_repo }}.git ./ruby
          cd ruby
          ruby ../git_log_utc.rb

      - name: Install/Update Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable-x86_64-pc-windows-msvc
          components: rustfmt

      - name: Configure bindgen
        run: |
          echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV
          echo "BINDGEN_EXTRA_CLANG_ARGS=$((gcm clang).source -replace "bin\clang.exe","include")" >> $env:GITHUB_ENV
          echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")"
          echo "BINDGEN_EXTRA_CLANG_ARGS=$((gcm clang).source -replace "bin\clang.exe","include")"

      - name: Cache - .downloaded-cache
        uses: actions/cache@v4
        with:
          path: .downloaded-cache
          key: dl-cache-win-mswin-${{ hashFiles('ruby/gems/bundled_gems') }}

      - name: build & install
        timeout-minutes: 30
        run:  ./1_0_build_install_mswin.ps1

      - name: test
        timeout-minutes: 70
        run:  ./2_0_test.ps1 mswin
        env:
          APPVEYOR: 'True'

      - name: CLI Check Bash
        shell: bash
        run: ./cli_test_bash

      - name: upload asset
        timeout-minutes: 5
        uses: ./.github/actions/upload-binary
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          ruby_path: ./${{ env.PRE }}
          release_tag: ${{ env.release_tag }}

      - name: save log artifact
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.TEST_LOGS }}
          path: ./logs
